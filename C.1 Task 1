# Open the folder that contains this file. 
# Then click Tools > Open current folder in terminal.
# Enter the command "python3 hello.py" to execute it.
# You can use the app named Thonny to modify Python files,
# but we recommend using the above command to execute it.

import time
import RPi.GPIO as GPIO
import signal

print("Press Ctrl+C to exit.")

x = 0
y = 0
  
# Pins that the encoders are connected to
LENCODER = 17
RENCODER = 18

# This function is called when the left encoder detects a rising edge signal.
def onLeftEncode(pin):
    print("Left encoder ticked!")
    x =+ 1;

# This function is called when the right encoder detects a rising edge signal.
def onRightEncode(pin):
    print("Right encoder ticked!")
    y =+ 1;

# This function is called when Ctrl+C is pressed.
# It's intended for properly exiting the program.
def ctrlC(signum, frame):
    print("Exiting")
    GPIO.cleanup()
    exit()

# Attach the Ctrl+C signal interrupt
signal.signal(signal.SIGINT, ctrlC)
    
# Set the pin numbering scheme to the numbering shown on the robot itself.
GPIO.setmode(GPIO.BCM)

# Set encoder pins as input
# Also enable pull-up resistors on the encoder pins
# This ensures a clean 0V and 3.3V is always outputted from the encoders.
GPIO.setup(LENCODER, GPIO.IN, pull_up_down=GPIO.PUD_UP)
GPIO.setup(RENCODER, GPIO.IN, pull_up_down=GPIO.PUD_UP)

# Attach a rising edge interrupt to the encoder pins
GPIO.add_event_detect(LENCODER, GPIO.RISING, onLeftEncode)
GPIO.add_event_detect(RENCODER, GPIO.RISING, onRightEncode)

# Prevent the program from exiting by adding a looping delay.
time.sleep(1)
start_time = time.time()
elapsed_time = start_time - time.time()

while True:
	setSpeeds(0,100)
	time.sleep(0.3)
  if elapsed_time == 10
    break
  
